{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["sideA","keyCode","id","name","side","url","sideB","activeStyle","backgroundColor","color","border","inActiveStyle","boxSizing","onHoverStyle","backgroundStyleA","transition","backgroundStyleB","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","buttonStyle","playSound","bind","assertThisInitialized","handleKeyPress","setButtonActive","setButtonInactive","setButtonOnHover","_this2","document","getElementById","play","updateDisplay","audioClip","setTimeout","addEventListener","removeEventListener","event","setState","react_default","a","createElement","onMouseDown","onMouseOver","onMouseOut","style","className","label","src","trackSrc","Component","DrumPad","_this3","allButtons","currentSide","map","obj","item","arr","App_Button","replace","App","_this4","currentClip","currentButtonStyle","currentVolume","displayVolume","displaySide","backgroundStyle","toggleSide","displayClipName","handleVolumeChange","_this5","target","value","Math","round","_this6","slice","getElementsByClassName","volume","App_DrumPad","class","onClick","type","min","max","step","onChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d415fda.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './css/App.css';\n\n//////////////////////////////////////////// SIDE A\nconst sideA = [{\n  keyCode: 81,\n  id: \"Q\",\n  name: \"Heater 1\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n}, {\n  keyCode: 87,\n  id: \"W\",\n  name: \"Heater 2\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\n}, {\n  keyCode: 69,\n  id: \"E\",\n  name: \"Heater 3\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\n}, {\n  keyCode: 65,\n  id: \"A\",\n  name: \"Heater 4\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n}, {\n  keyCode: 83,\n  id: \"S\",\n  name: \"Clap\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n}, {\n  keyCode: 68,\n  id: \"D\",\n  name: \"Open HH\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\n}, {\n  keyCode: 90,\n  id: \"Z\",\n  name: \"Kick'n'hat\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n}, {\n  keyCode: 88,\n  id: \"X\",\n  name: \"Kick\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n}, {\n  keyCode: 67,\n  id: \"C\",\n  name: \"Closed HH\",\n  side: \"A\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n}];\n\n//////////////////////////////////////////// SIDE B\nconst sideB = [{\n  keyCode: 81,\n  id: \"Q\",\n  name: \"Chord 1\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\n}, {\n  keyCode: 87,\n  id: \"W\",\n  name: \"Chord 2\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\n}, {\n  keyCode: 69,\n  id: \"E\",\n  name: \"Chord 3\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\n}, {\n  keyCode: 65,\n  id: \"A\",\n  name: \"Shaker\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n}, {\n  keyCode: 83,\n  id: \"S\",\n  name: \"Open HH\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\n}, {\n  keyCode: 68,\n  id: \"D\",\n  name: \"Closed HH\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\n}, {\n  keyCode: 90,\n  id: \"Z\",\n  name: \"Punchy Kick\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\n}, {\n  keyCode: 88,\n  id: \"X\",\n  name: \"Side Stick\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\n}, {\n  keyCode: 67,\n  id: \"C\",\n  name: \"Snare\",\n  side: \"B\",\n  url: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\n}];\n\n//////////////////////////////////////////// BUTTON STYLES\nconst activeStyle = {\n  backgroundColor: \"orange\",\n  color: \"white\",\n  border: \"none\"\n}\nconst inActiveStyle = {\n  boxSizing: \"border-box\"\n}\n\nconst onHoverStyle = {\n  backgroundColor: \"lightgrey\"\n}\n\nconst backgroundStyleA = {\n  backgroundColor: \"lightgreen\",\n  transition: \"2s\"\n}\n\nconst backgroundStyleB = {\n  backgroundColor: \"lightblue\",\n  transition: \"2s\"\n}\n\n//////////////////////////////////////////// BUTTON\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonStyle: inActiveStyle\n    }\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.setButtonActive = this.setButtonActive.bind(this);\n    this.setButtonInactive = this.setButtonInactive.bind(this);\n    this.setButtonOnHover = this.setButtonOnHover.bind(this);\n  }\n  playSound() {\n    var sound = document.getElementById(this.props.id);\n    sound.play();\n    this.props.updateDisplay(this.props.audioClip);\n    this.setButtonActive();\n    setTimeout(() => this.setButtonInactive(), 200)\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n  handleKeyPress(event) {\n    if (event.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n  setButtonActive() {\n    this.setState({\n      buttonStyle: activeStyle\n    });\n  }\n  setButtonInactive() {\n    this.setState({\n      buttonStyle: inActiveStyle\n    });\n  }\n  setButtonOnHover() {\n    this.setState({\n      buttonStyle: onHoverStyle\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div \n          onMouseDown={this.playSound}\n          onMouseOver={this.setButtonOnHover}\n          onMouseOut={this.setButtonInactive}\n          style={this.state.buttonStyle}\n          className=\"drum-pad\"\n          id={this.props.audioClip} \n        > {this.props.label}\n          <audio className=\"clip\"\n            id={this.props.id}\n            src={this.props.trackSrc}\n          ></audio>\n        </div>\n      </div>\n    );\n  }\n}\n\n//////////////////////////////////////////// DRUM PAD\nclass DrumPad extends Component {\n  render() {\n    let allButtons = this.props.currentSide.map((obj, item, arr) => {\n    return (\n      <Button \n        id={arr[item].id}\n        keyCode={arr[item].keyCode}\n        label={arr[item].id}\n        audioClip={arr[item].name.replace(/\\s/g, \"-\")}\n        trackSrc={arr[item].url}\n        updateDisplay={this.props.updateDisplay}\n        />\n      )\n    });\n    return (\n      <div id=\"pad\">\n        {allButtons}\n      </div>\n    );\n  }\n}\n\n//////////////////////////////////////////// MAIN APP\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSide: sideA,\n      currentClip: \"-\",\n      currentButtonStyle: inActiveStyle,\n      currentVolume: 1,\n      displayVolume: \"VOL: 100 %\",\n      buttonStyle: inActiveStyle,\n      displaySide: \"SIDE A\",\n      backgroundStyle: backgroundStyleA,\n    }\n    this.toggleSide = this.toggleSide.bind(this);\n    this.displayClipName = this.displayClipName.bind(this);\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\n    this.setButtonActive = this.setButtonActive.bind(this);\n    this.setButtonInactive = this.setButtonInactive.bind(this);\n    this.setButtonOnHover = this.setButtonOnHover.bind(this);\n  }\n  toggleSide() {  // TOGGLING SIDES\n    this.state.currentSide === sideA ?\n    this.setState({\n      currentSide: sideB,\n      displaySide: \"SIDE B\",\n      backgroundStyle: backgroundStyleB\n    }) :\n    this.setState({\n      currentSide: sideA,\n      displaySide: \"SIDE A\",\n      backgroundStyle: backgroundStyleA\n    });\n    this.setButtonActive();\n    setTimeout(() => this.setButtonInactive(), 200);\n  }\n  displayClipName(name) {\n    this.setState({\n      currentClip: name\n    });\n  }\n  handleVolumeChange(event) {\n    this.setState({\n      currentVolume: event.target.value,\n      displayVolume: \"VOL: \" + Math.round(event.target.value*100) + \" %\"\n    });\n  }\n  setButtonActive() {\n    this.setState({\n      buttonStyle: activeStyle,\n    });\n  }\n  setButtonInactive() {\n    this.setState({\n      buttonStyle: inActiveStyle\n    });\n  }\n  setButtonOnHover() {\n    this.setState({\n      buttonStyle: onHoverStyle\n    });\n  }\n\n  render() {\n    // slider changes are mapped onto all audio elements volume properties\n    const clip = [].slice.call(document.getElementsByClassName(\"clip\"));\n    clip.map((item) => {\n      item.volume = this.state.currentVolume;\n    });\n    return (\n      <div id=\"container\" style={this.state.backgroundStyle}>\n        <div id=\"drum-machine\">\n          <DrumPad \n            currentSide={this.state.currentSide}\n            updateDisplay={this.displayClipName}\n          />\n\n          <div id=\"display\">\n            <div\n              class=\"display-block\"\n              style={this.state.buttonStyle}\n              onClick={this.toggleSide}\n              onMouseOver={this.setButtonOnHover}\n              onMouseOut={this.setButtonInactive}>\n              {this.state.displaySide}\n            </div>\n            <div class=\"display-block\">{this.state.currentClip.replace(/-/g,\" \")}</div>\n            <div class=\"display-block\">{this.state.displayVolume}</div>\n            <div class=\"display-block\">\n              <input\n                id=\"slider\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                onChange={this.handleVolumeChange}>\n              </input>\n            </div>\n          </div>\n        </div>\n        <div>\n          <span id=\"side-text\">{this.state.displaySide}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}